{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/audio/audio.component.ts","./src/app/audio/audio.component.html","./src/app/audio/audio.service.ts","./src/app/file/file.component.ts","./src/app/file/file.component.html","./src/app/file/file.service.ts","./src/app/imageupload/imageupload.component.ts","./src/app/imageupload/imageupload.component.html","./src/app/imageupload/imageupload.service.ts","./src/app/microsoft-services/microsoft-services.component.ts","./src/app/microsoft-services/microsoft-services.component.html","./src/app/text/text.component.ts","./src/app/text/text.component.html","./src/app/text/text.service.ts","./src/environments/environment.ts","./src/main.ts","fs (ignored)","https-proxy-agent (ignored)","ws (ignored)","../../external/ocsp/ocsp (ignored)"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { MicrosoftServicesComponent } from './microsoft-services/microsoft-services.component';\r\nimport { FileComponent } from './file/file.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: 'microsoftservices', component: MicrosoftServicesComponent },\r\n  { path: 'formrecognizer', component: FileComponent },\r\n  { path: '', redirectTo: '/microsoftservices', pathMatch: 'full' },\r\n  { path: '**', redirectTo: '/microsoftservices', pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"app-root\",\r\n  templateUrl: \"./app.component.html\",\r\n  styleUrls: [\"./app.component.css\"],\r\n})\r\nexport class AppComponent {\r\n}\r\n","<router-outlet></router-outlet> \r\n","import { BrowserModule } from \"@angular/platform-browser\";\r\nimport { NgModule } from \"@angular/core\";\r\n\r\nimport { AppRoutingModule } from \"./app-routing.module\";\r\nimport { AppComponent } from \"./app.component\";\r\nimport { ImageuploadComponent } from \"./imageupload/imageupload.component\";\r\nimport { ReactiveFormsModule } from \"@angular/forms\";\r\nimport { ImageuploadService } from \"./imageupload/imageupload.service\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { AudioComponent } from \"./audio/audio.component\";\r\nimport { AudioService } from \"./audio/audio.service\";\r\nimport { FileComponent } from './file/file.component';\r\nimport { FileService } from './file/file.service';\r\nimport { TextComponent } from './text/text.component';\nimport { MicrosoftServicesComponent } from './microsoft-services/microsoft-services.component';\r\n\r\n@NgModule({\r\n  declarations: [AppComponent, ImageuploadComponent, AudioComponent, FileComponent, TextComponent, MicrosoftServicesComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n  ],\r\n  providers: [ImageuploadService, AudioService, FileService],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit, ViewChild, ElementRef } from \"@angular/core\";\r\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\r\nimport { AudioService } from \"./audio.service\";\r\nimport {\r\n  ResultReason,\r\n  SpeechRecognizer,\r\n} from \"microsoft-cognitiveservices-speech-sdk\";\r\n\r\n@Component({\r\n  selector: \"app-audio\",\r\n  templateUrl: \"./audio.component.html\",\r\n  styleUrls: [\"./audio.component.css\"],\r\n})\r\nexport class AudioComponent implements OnInit {\r\n  loading: boolean = false;\r\n  myForm = new FormGroup({\r\n    file: new FormControl(\"\", [Validators.required]),\r\n    fileSource: new FormControl(\"\", [Validators.required]),\r\n  });\r\n  selectedFile: File;\r\n  showText: string;\r\n  filename: string;\r\n  speechProcessing: boolean = false;\r\n  spokenText: string;\r\n\r\n  recognizing: boolean = false;\r\n  lastRecognized: string = \"\";\r\n  recognizer: SpeechRecognizer;\r\n  currentLanguage: string = \"en-IN\";\r\n  @ViewChild(\"selectLanguage\") selectLanguage: ElementRef;\r\n  @ViewChild(\"targetLanguage\") targetLanguage: ElementRef;\r\n  languageList = [\r\n    {\r\n      value: \"en-IN\",\r\n      text: \"English (India)\",\r\n    },\r\n    {\r\n      value: \"en-US\",\r\n      text: \"English (United States)\",\r\n    },\r\n    {\r\n      value: \"hi-IN\",\r\n      text: \"Hindi (India)\",\r\n    },\r\n    {\r\n      value: \"en-GB\",\r\n      text: \"English (United Kingdom)\",\r\n    },\r\n  ];\r\n\r\n  targetLanguages = [\r\n    {\r\n      value: \"en\",\r\n      text: \"English\",\r\n    },\r\n    {\r\n      value: \"hi\",\r\n      text: \"Hindi\",\r\n    },\r\n    {\r\n      value: \"pa\",\r\n      text: \"Punjabi\",\r\n    },\r\n  ];\r\n\r\n  constructor(private audioService: AudioService) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  onFileChange(event: any) {\r\n    if (event.target.files && event.target.files.length) {\r\n      const [file] = event.target.files;\r\n      this.selectedFile = file;\r\n      this.filename = file.name;\r\n    }\r\n  }\r\n\r\n  onLanguageChange() {\r\n    this.currentLanguage = this.selectLanguage.nativeElement.value;\r\n  }\r\n\r\n  submit() {\r\n    this.loading = true;\r\n    var subscription = this.audioService\r\n      .submitFormData(this.selectedFile)\r\n      .subscribe(\r\n        (res) => {\r\n          this.showText = res ? res.toString() : \"\";\r\n          subscription.unsubscribe();\r\n          this.myForm.reset();\r\n          this.selectedFile = null;\r\n          this.filename = \"\";\r\n          this.loading = false;\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n          subscription.unsubscribe();\r\n          this.loading = false;\r\n        }\r\n      );\r\n  }\r\n\r\n  speechRecognizing() {\r\n    if (this.recognizing) {\r\n      this.recognizeSpeechStop();\r\n    } else {\r\n      this.recognizing = true;\r\n      this.recognizeSpeechStart();\r\n    }\r\n  }\r\n\r\n  recognizeSpeechStart() {\r\n    this.recognizer = this.audioService.initSpeechService(this.currentLanguage);\r\n    this.recognizer.recognizing = this.recognizer.recognized = this.recognizerCallback.bind(\r\n      this\r\n    );\r\n    this.recognizer.startContinuousRecognitionAsync();\r\n  }\r\n\r\n  recognizeSpeechStop() {\r\n    this.recognizer.stopContinuousRecognitionAsync(\r\n      this.stopRecognizerCallback.bind(this),\r\n\r\n      (err) => {\r\n        this.stopRecognizerCallback.bind(this);\r\n        console.error(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  recognizerCallback(s, e) {\r\n    const reason = ResultReason[e.result.reason];\r\n\r\n    if (reason == \"RecognizingSpeech\") {\r\n      this.showText = this.lastRecognized + e.result.text;\r\n    }\r\n    if (reason == \"RecognizedSpeech\") {\r\n      this.lastRecognized += e.result.text + \"\\r\\n\";\r\n      this.showText = this.lastRecognized;\r\n    }\r\n    if (reason == \"NoMatch\") {\r\n    }\r\n  }\r\n\r\n  stopRecognizerCallback() {\r\n    this.recognizer.close();\r\n    this.recognizer = null;\r\n    this.recognizing = false;\r\n  }\r\n\r\n  translateSpeechToText() {\r\n    let recognizer = this.audioService.initTranslateService(\r\n      this.currentLanguage,\r\n      this.targetLanguage.nativeElement.value\r\n    );\r\n\r\n    recognizer.recognizeOnceAsync((evt) => {\r\n      if (evt.reason == ResultReason.TranslatedSpeech) {\r\n        this.spokenText = evt.text;\r\n        this.showText = evt.translations.get(\r\n          this.targetLanguage.nativeElement.value\r\n        );\r\n        recognizer.close();\r\n      }\r\n      if (evt.reason == ResultReason.NoMatch) {\r\n        recognizer.close();\r\n      }\r\n    });\r\n  }\r\n\r\n  reset() {\r\n    this.showText = \"\";\r\n    this.lastRecognized = \"\";\r\n    this.spokenText = \"\";\r\n  }\r\n}\r\n","<div *ngIf=\"loading\" class=\"spinner-border text-info\" role=\"status\">\r\n  <span class=\"sr-only\">Loading...</span>\r\n</div>\r\n<div class=\"container\">\r\n  <div class=\"row\">\r\n    <form [formGroup]=\"myForm\" (ngSubmit)=\"submit()\">\r\n      <label><b>Upload Audio File</b></label> <br />\r\n      <div class=\"btn btn-success btn-file\">\r\n        Upload\r\n        <input\r\n          formControlName=\"file\"\r\n          type=\"file\"\r\n          id=\"input-audio-file\"\r\n          (change)=\"onFileChange($event)\"\r\n        />\r\n      </div>\r\n      <p *ngIf=\"filename\">{{ filename }}</p>\r\n      <br /><br /><button\r\n        *ngIf=\"selectedFile\"\r\n        class=\"btn btn-primary\"\r\n        type=\"submit\"\r\n      >\r\n        Submit\r\n      </button>\r\n    </form>\r\n  </div>\r\n\r\n  <hr />\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-md-2 mt-4\">\r\n      <button\r\n        class=\"btn btn-primary\"\r\n        *ngIf=\"!recognizing\"\r\n        (click)=\"speechRecognizing()\"\r\n      >\r\n        Speak\r\n      </button>\r\n      <button\r\n        class=\"btn btn-danger\"\r\n        *ngIf=\"recognizing\"\r\n        (click)=\"speechRecognizing()\"\r\n      >\r\n        Stop\r\n      </button>\r\n    </div>\r\n    <div class=\"col-md-4\">\r\n      <label><b>Select Your Language</b></label>\r\n      <select\r\n        class=\"form-control\"\r\n        (change)=\"onLanguageChange()\"\r\n        #selectLanguage\r\n      >\r\n        <option *ngFor=\"let option of languageList\" [value]=\"option.value\">{{\r\n          option.text\r\n        }}</option>\r\n      </select>\r\n    </div>\r\n  </div>\r\n\r\n  <hr />\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-md-2 mt-4\">\r\n      <button class=\"btn btn-primary\" (click)=\"translateSpeechToText()\">\r\n        Speak To Translate\r\n      </button>\r\n    </div>\r\n    <div class=\"col-md-5\">\r\n      <label><b>Select Source Language</b></label>\r\n      <select\r\n        class=\"form-control\"\r\n        (change)=\"onLanguageChange()\"\r\n        #selectLanguage\r\n      >\r\n        <option *ngFor=\"let option of languageList\" [value]=\"option.value\">{{\r\n          option.text\r\n        }}</option>\r\n      </select>\r\n    </div>\r\n    <div class=\"col-md-5\">\r\n      <label><b>Select Target Language</b></label>\r\n      <select class=\"form-control\" #targetLanguage>\r\n        <option *ngFor=\"let option of targetLanguages\" [value]=\"option.value\">{{\r\n          option.text\r\n        }}</option>\r\n      </select>\r\n    </div>\r\n  </div>\r\n\r\n  <hr />\r\n\r\n  <div class=\"row\">\r\n    <label><b>Result: </b></label>\r\n    <br />\r\n\r\n    <p *ngIf=\"spokenText\" class=\"spoken-text\">{{ spokenText }}</p>\r\n    <p class=\"result-text\" *ngIf=\"showText\">{{ showText }}</p>\r\n    <button *ngIf=\"showText\" class=\"btn btn-danger\" (click)=\"reset()\">\r\n      Clear\r\n    </button>\r\n  </div>\r\n</div>\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\n\r\nimport { domain } from \"../../environments/environment\";\r\nimport {\r\n  AudioConfig,\r\n  SpeechConfig,\r\n  SpeechRecognizer,\r\n  TranslationRecognizer,\r\n  SpeechTranslationConfig,\r\n} from \"microsoft-cognitiveservices-speech-sdk\";\r\nimport { SPEECH_CONFIG } from \"../../environments/environment\";\r\n\r\n@Injectable()\r\nexport class AudioService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  submitFormData(requestFile: File) {\r\n    let fd = new FormData();\r\n    fd.append(\"file\", requestFile, requestFile.name);\r\n    return this.http.post(`${domain}/api/audio/recognize`, fd);\r\n  }\r\n\r\n  initSpeechService(currentLanguage: string) {\r\n    const audioConfig = AudioConfig.fromDefaultMicrophoneInput();\r\n    const speechConfig = SpeechConfig.fromSubscription(\r\n      SPEECH_CONFIG.API_KEY,\r\n      SPEECH_CONFIG.REGION\r\n    );\r\n    speechConfig.speechRecognitionLanguage = currentLanguage;\r\n    speechConfig.enableDictation();\r\n    return new SpeechRecognizer(speechConfig, audioConfig);\r\n  }\r\n\r\n  initTranslateService(sourceLanguage: string, targetLanguage: string) {\r\n    const audioConfig = AudioConfig.fromDefaultMicrophoneInput();\r\n    const translateConfig = SpeechTranslationConfig.fromSubscription(\r\n      SPEECH_CONFIG.API_KEY,\r\n      SPEECH_CONFIG.REGION\r\n    );\r\n    translateConfig.speechRecognitionLanguage = sourceLanguage;\r\n    translateConfig.addTargetLanguage(targetLanguage);\r\n    translateConfig.enableDictation();\r\n    return new TranslationRecognizer(translateConfig, audioConfig);\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { FileService } from './file.service';\r\nimport { viewClassName } from '@angular/compiler';\r\n\r\n@Component({\r\n  selector: 'app-file',\r\n  templateUrl: './file.component.html',\r\n  styleUrls: ['./file.component.css']\r\n})\r\nexport class FileComponent implements OnInit {\r\n\r\n  loading: boolean = false;\r\n  myForm = new FormGroup({\r\n    file: new FormControl(\"\", [Validators.required]),\r\n    fileSource: new FormControl(\"\", [Validators.required]),\r\n    filePassword: new FormControl(\"\", [Validators.required])\r\n  });\r\n  selectedFile: File;\r\n  showText: string;\r\n  filename: string;\r\n  fileTypeSelected: string = \"pdf\";\r\n  @ViewChild('urlInput') urlInput: ElementRef;\r\n  @ViewChild('selectFileType') selectFileType: ElementRef;\r\n  @ViewChild('responseTypeSelect') responseTypeSelect: ElementRef;\r\n  fileTypeList = [\r\n    {\r\n      value: \"pdf\",\r\n      text: \"PDF\"\r\n    },\r\n    {\r\n      value: \"png\",\r\n      text: \"PNG\"\r\n    },\r\n    {\r\n      value: \"jpeg\",\r\n      text: \"JPG/JPEG\"\r\n    },\r\n    {\r\n      value: \"tiff\",\r\n      text: \"TIFF\"\r\n    },\r\n  ]\r\n\r\n  responseTypeList = [\r\n    {\r\n      value: \"text\",\r\n      text: \"Get file text in reponse\"\r\n    },\r\n    {\r\n      value: \"json\",\r\n      text: \"Get raw JSON response\"\r\n    }\r\n  ]\r\n\r\n  constructor(private fileService: FileService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onFileChange(event: any) {\r\n    if (event.target.files && event.target.files.length) {\r\n      const [file] = event.target.files;\r\n      this.selectedFile = file;\r\n      this.filename = file.name;\r\n    }\r\n  }\r\n\r\n  onFileTypeChange() {\r\n    this.fileTypeSelected = this.selectFileType.nativeElement.value;\r\n  }\r\n\r\n  submit() {\r\n    this.loading = true;\r\n    var subscription = this.fileService\r\n      .submitFormData(this.selectedFile, this.myForm.value.filePassword, this.fileTypeSelected, this.responseTypeSelect.nativeElement.value)\r\n      .subscribe(\r\n        (res) => {\r\n          this.showText = res ? res.toString() : \"\";\r\n          subscription.unsubscribe();\r\n          this.myForm.reset();\r\n          this.selectedFile = null;\r\n          this.filename = \"\";\r\n          this.loading = false;\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n          subscription.unsubscribe();\r\n          this.loading = false;\r\n        }\r\n      );\r\n  }\r\n\r\n  submitURL() {\r\n    this.loading = true;\r\n    var subscription = this.fileService\r\n      .submit(this.urlInput.nativeElement.value, this.responseTypeSelect.nativeElement.value)\r\n      .subscribe(\r\n        (res) => {\r\n          this.showText = res ? res.toString() : \"\";\r\n          subscription.unsubscribe();\r\n          this.urlInput.nativeElement.value = \"\";\r\n          this.loading = false;\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n          subscription.unsubscribe();\r\n          this.loading = false;\r\n        }\r\n      );\r\n  }\r\n\r\n  reset() {\r\n    this.showText = \"\";\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"loading\" class=\"spinner-border text-info\" role=\"status\">\r\n      <span class=\"sr-only\">Loading...</span>\r\n</div>\r\n<div class=\"container\">\r\n      <div class=\"row\">\r\n            <label class=\"col-md-4\"><strong>Select Response Type</strong></label>\r\n            <select id=\"responseTypeSelect\" class=\"form-control col-md-6\" #responseTypeSelect>\r\n                  <option *ngFor=\"let option of responseTypeList\" [value]=\"option.value\">\r\n                        {{option.text}}\r\n                  </option>\r\n            </select>\r\n      </div>\r\n      <hr>\r\n      <div class=\"row\">\r\n            <form [formGroup]=\"myForm\" (ngSubmit)=\"submit()\" class=\"col-md-5\">\r\n\r\n                  <div *ngIf=\"fileTypeSelected == 'pdf'\">\r\n                        <input type=\"password\" id=\"filePassword\" placeholder=\"Enter file password (if any)\"\r\n                              class=\"form-control\" formControlName=\"filePassword\" />\r\n\r\n                        <br />\r\n                  </div>\r\n\r\n                  <label><b>Upload File</b></label> <br />\r\n                  <div class=\"btn btn-success btn-file\">\r\n                        Upload\r\n                        <input formControlName=\"file\" type=\"file\" id=\"input-file\" (change)=\"onFileChange($event)\" />\r\n                  </div>\r\n\r\n                  <p *ngIf=\"filename\">{{ filename }}</p>\r\n\r\n                  <br /><br />\r\n                  <button *ngIf=\"selectedFile\" class=\"btn btn-primary\" type=\"submit\">\r\n                        Submit\r\n                  </button>\r\n            </form>\r\n\r\n            <label><b>Select File Type</b></label>\r\n            <div class=\"col-md-4\">\r\n                  <select class=\"form-control\" #selectFileType (change)=\"onFileTypeChange()\">\r\n                        <option *ngFor=\"let option of fileTypeList\" [value]=\"option.value\">\r\n                              {{option.text}}\r\n                        </option>\r\n                  </select>\r\n            </div>\r\n      </div>\r\n\r\n      <hr />\r\n      <div class=\"row\">\r\n            <label><b>Paste File URL</b></label>\r\n            <input class=\"form-control\" id=\"input-url\" type=\"url\" placeholder=\"Enter/ paste image url\" #urlInput />\r\n\r\n            <br /><br /><button class=\"btn btn-primary\" (click)=\"submitURL()\">\r\n                  Submit\r\n            </button>\r\n      </div>\r\n\r\n      <hr />\r\n      <div class=\"row\">\r\n            <label><b>Result: </b></label>\r\n            <br />\r\n            <p class=\"result-text\" *ngIf=\"showText\">{{ showText }}</p>\r\n            <button *ngIf=\"showText\" class=\"btn btn-danger\" (click)=\"reset()\">\r\n                  Clear\r\n            </button>\r\n      </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { domain } from \"../../environments/environment\";\r\n\r\n@Injectable()\r\nexport class FileService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  submitFormData(requestFile: File, filePassword: string, fileType: string, resultType: string = \"text\") {\r\n    let fd = new FormData();\r\n    fd.append(\"file\", requestFile, requestFile.name);\r\n    fd.append(\"fileType\", fileType);\r\n    fd.append(\"filePassword\", filePassword);\r\n    fd.append(\"resultType\", resultType);\r\n    return this.http.post(`${domain}/api/form/analyze/local`, fd);\r\n  }\r\n\r\n  submit(\r\n    requestFile: string, resultType: string = \"text\"\r\n  ) {\r\n    let data = {\r\n      file: requestFile,\r\n      resultType\r\n    };\r\n\r\n    return this.http.post(\r\n      `${domain}/api/form/analyze`,\r\n      data\r\n    );\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  ViewChild,\r\n  ElementRef,\r\n  OnDestroy,\r\n} from \"@angular/core\";\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { ImageuploadService } from \"./imageupload.service\";\r\n\r\n@Component({\r\n  selector: \"app-imageupload\",\r\n  templateUrl: \"./imageupload.component.html\",\r\n  styleUrls: [\"./imageupload.component.css\"],\r\n})\r\nexport class ImageuploadComponent implements OnInit {\r\n  loading: boolean = false;\r\n  imageSrc: string;\r\n  myForm = new FormGroup({\r\n    file: new FormControl(\"\", [Validators.required]),\r\n    fileSource: new FormControl(\"\", [Validators.required]),\r\n  });\r\n  showText: string;\r\n  @ViewChild(\"urlInput\") urlInput: ElementRef;\r\n  @ViewChild(\"selectService\") selectService: ElementRef;\r\n  @ViewChild(\"selectRecognizeOption\") recognizeMode: ElementRef;\r\n  recognizeSelected: boolean = false;\r\n  selectedFile: File;\r\n  languageList = [\r\n    {\r\n      value: \"en\",\r\n      text: \"English\"\r\n    },\r\n    {\r\n      value: \"hi\",\r\n      text: \"Hindi\"\r\n    }\r\n  ]\r\n  selectedLanguage = \"en\";\r\n  resultArray = [];\r\n\r\n  constructor(private imageUploadService: ImageuploadService) { }\r\n\r\n  ngOnInit(): void { }\r\n\r\n  onFileChange(event: any) {\r\n    const reader = new FileReader();\r\n\r\n    if (event.target.files && event.target.files.length) {\r\n      const [file] = event.target.files;\r\n      reader.readAsDataURL(file);\r\n      this.selectedFile = file;\r\n\r\n      reader.onload = () => {\r\n        this.imageSrc = reader.result as string;\r\n\r\n        this.myForm.patchValue({\r\n          fileSource: reader.result,\r\n        });\r\n      };\r\n    }\r\n  }\r\n\r\n  submit() {\r\n    this.loading = true;\r\n    var subscription = this.imageUploadService\r\n      .submitFormData(\r\n        this.selectedLanguage,\r\n        this.selectedFile,\r\n        this.selectService ? this.selectService.nativeElement.value : \"\",\r\n        this.recognizeMode ? this.recognizeMode.nativeElement.value : \"\"\r\n      )\r\n      .subscribe(\r\n        (res: any) => {\r\n          if (res.success) {\r\n            if (typeof (res.data) == \"string\") {\r\n              this.showText = res.data.toString();\r\n            }\r\n            else {\r\n              this.resultArray = res.data;\r\n            }\r\n\r\n          } else {\r\n            this.showText = res.userMessage;\r\n          }\r\n          subscription.unsubscribe();\r\n          this.myForm.reset();\r\n          this.imageSrc = \"\";\r\n          this.loading = false;\r\n        },\r\n        (err) => {\r\n          console.log(err[\"error\"]);\r\n          subscription.unsubscribe();\r\n          this.loading = false;\r\n        }\r\n      );\r\n  }\r\n\r\n  submitURL() {\r\n    this.loading = true;\r\n    var subscription = this.imageUploadService\r\n      .submitForm(\r\n        this.selectedLanguage,\r\n        this.urlInput ? this.urlInput.nativeElement.value : \"\",\r\n        this.selectService ? this.selectService.nativeElement.value : \"\",\r\n        this.recognizeMode ? this.recognizeMode.nativeElement.value : \"\"\r\n      )\r\n      .subscribe(\r\n        (res: any) => {\r\n          if (res.success) {\r\n            if (typeof (res.data) == \"string\") {\r\n              this.showText = res.data.toString();\r\n            }\r\n            else {\r\n              this.resultArray = res.data;\r\n            }\r\n\r\n          } else {\r\n            this.showText = res.userMessage;\r\n          }\r\n          subscription.unsubscribe();\r\n          this.urlInput.nativeElement.value = \"\";\r\n          this.loading = false;\r\n        },\r\n        (err) => {\r\n          console.log(err[\"error\"]);\r\n          subscription.unsubscribe();\r\n          this.loading = false;\r\n        }\r\n      );\r\n  }\r\n\r\n  reset() {\r\n    this.showText = \"\";\r\n    this.resultArray = [];\r\n  }\r\n\r\n  onServiceSelection() {\r\n    if (this.selectService.nativeElement.value == \"recognize\") {\r\n      this.recognizeSelected = true;\r\n    } else {\r\n      this.recognizeSelected = false;\r\n    }\r\n  }\r\n\r\n  onLanguageChange(event: any) {\r\n    this.selectedLanguage = event.target.value;\r\n    this.recognizeSelected = false\r\n  }\r\n}\r\n","<div *ngIf=\"loading\" class=\"spinner-border text-info\" role=\"status\">\r\n  <span class=\"sr-only\">Loading...</span>\r\n</div>\r\n<div class=\"container\">\r\n  <div class=\"row\">\r\n\r\n    <!-- <div class=\"col-md-4\">\r\n      <label><strong>Select Language</strong></label>\r\n      <select class=\"form-control\" (change)=\"onLanguageChange($event)\">\r\n        <option *ngFor=\"let option of languageList\" [value]=\"option.value\">{{option.text}}</option>\r\n      </select>\r\n    </div> -->\r\n\r\n    <div class=\"col-md-6\" *ngIf=\"selectedLanguage != 'hi'\">\r\n      <label><b>Select service end point</b></label>\r\n      <select class=\"form-control\" #selectService (change)=\"onServiceSelection()\">\r\n        <option value=\"ocr\">Use OCR End Point</option>\r\n        <option value=\"recognize\">Use Recognize End Point</option>\r\n        <option value=\"batchanalyze\">Use Batch Analyze End Point</option>\r\n      </select>\r\n    </div>\r\n\r\n    <div *ngIf=\"recognizeSelected && selectedLanguage != 'hi'\" class=\"row col-md-6\">\r\n      <label><b>Select Recognition mode</b></label>\r\n      <select class=\"form-control\" #selectRecognizeOption>\r\n        <option value=\"p\">Printed</option>\r\n        <option value=\"h\">Handwritten</option>\r\n      </select>\r\n    </div>\r\n\r\n    <p *ngIf=\"selectedLanguage == 'hi'\" style=\"margin-top: 12px;margin-left: 14px;margin-bottom: -12px;\">\r\n      <i>\r\n        <strong>NOTE: </strong>\r\n        For language Hindi, we are using Google's Tesseract software (open source). &nbsp;&nbsp;&nbsp;&nbsp;\r\n      </i>\r\n    </p>\r\n  </div>\r\n  <br />\r\n  <hr />\r\n\r\n  <div class=\"row\">\r\n    <form [formGroup]=\"myForm\" (ngSubmit)=\"submit()\">\r\n      <label><b>Upload Image File</b></label> <br />\r\n      <div class=\"btn btn-success btn-file\">\r\n        Upload\r\n        <input formControlName=\"file\" type=\"file\" id=\"input-image-file\" (change)=\"onFileChange($event)\" />\r\n      </div>\r\n\r\n      <br /><br /><button *ngIf=\"imageSrc\" class=\"btn btn-primary\" type=\"submit\">Submit</button>\r\n    </form>\r\n    <img [src]=\"imageSrc\" *ngIf=\"imageSrc\" />\r\n  </div>\r\n\r\n  <hr />\r\n  <div class=\"row\">\r\n    <label><b>Paste Image URL</b></label>\r\n    <input class=\"form-control\" id=\"input-url\" type=\"url\" placeholder=\"Enter/ paste image url\" #urlInput />\r\n\r\n    <br /><br /><button class=\"btn btn-primary\" (click)=\"submitURL()\">\r\n      Submit\r\n    </button>\r\n  </div>\r\n\r\n  <hr />\r\n  <div class=\"row\">\r\n    <label><b>Result: </b></label>\r\n    <br />\r\n    <p class=\"result-text\" *ngIf=\"showText\">{{ showText }}</p>\r\n\r\n    <div class=\"table-responsive table-bordered\" *ngIf=\"resultArray.length\">\r\n      <table class=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\" *ngFor=\"let item of resultArray; index as i\">Text {{i + 1}}</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td *ngFor=\"let item of resultArray\">{{item}}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n    <button *ngIf=\"showText || resultArray.length\" class=\"btn btn-danger\"\r\n      style=\"margin-top: 10px; margin-bottom: -10px;\" (click)=\"reset()\">\r\n      Clear\r\n    </button>\r\n  </div>\r\n</div>","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { domain } from \"../../environments/environment\";\r\n\r\nvar service = {\r\n  ocr: \"ocr\",\r\n  recognize: \"recognize\",\r\n  batchanalyze: \"batchAnalyze\",\r\n};\r\n\r\n@Injectable()\r\nexport class ImageuploadService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n  submitFormData(language: string, requestFile: File, selectedService: string, recognizeMode: string = \"\") {\r\n    if (language == \"hi\") {\r\n      return this.tesseractImageProcess(requestFile);\r\n    } else {\r\n      return this.cognitiveServieImageProcess(requestFile, selectedService, recognizeMode);\r\n    }\r\n  }\r\n\r\n  submitForm(\r\n    language: string,\r\n    requestFile: string,\r\n    selectedService: string,\r\n    recognizeMode: string = \"\"\r\n  ) {\r\n    if (language == \"hi\") {\r\n      return this.tesseractRemoteImageProcess(requestFile);\r\n    } else {\r\n      return this.cognitiveServiceRemoteImageProcess(requestFile, selectedService, recognizeMode)\r\n    }\r\n  }\r\n\r\n  cognitiveServieImageProcess(\r\n    requestFile: File,\r\n    selectedService: string,\r\n    recognizeMode: string = \"\"\r\n  ) {\r\n    let fd = new FormData();\r\n    fd.append(\"file\", requestFile, requestFile.name);\r\n    fd.append(\"recognizeMode\", recognizeMode);\r\n\r\n    return this.http.post(\r\n      `${domain}/api/image/${service[selectedService]}/local`,\r\n      fd\r\n    );\r\n  }\r\n\r\n  tesseractImageProcess(requestFile: File) {\r\n    let fd = new FormData();\r\n    fd.append(\"file\", requestFile, requestFile.name);\r\n\r\n    return this.http.post(\r\n      `${domain}/api/ocr/hindi/imagelocal`,\r\n      fd\r\n    );\r\n  }\r\n\r\n  cognitiveServiceRemoteImageProcess(requestFile: string, selectedService: string, recognizeMode: string = \"\") {\r\n    let data = {\r\n      image: requestFile,\r\n      recognizeMode,\r\n    };\r\n\r\n    return this.http.post(\r\n      `${domain}/api/image/${service[selectedService]}`,\r\n      data\r\n    );\r\n  }\r\n\r\n  tesseractRemoteImageProcess(requestFile: string) {\r\n    let data = {\r\n      image: requestFile\r\n    };\r\n\r\n    return this.http.post(\r\n      `${domain}/api/ocr/hindi/imageremote`,\r\n      data\r\n    );\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-microsoft-services',\n  templateUrl: './microsoft-services.component.html',\n  styleUrls: ['./microsoft-services.component.css']\n})\nexport class MicrosoftServicesComponent implements OnInit {\n  activeTab = \"image\";\n\n  search(activeTab) {\n    this.activeTab = activeTab;\n  }\n\n  result(activeTab) {\n    this.activeTab = activeTab;\n  }\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"tabs\" class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-3\">\n            <ul class=\"nav nav-tabs\">\n                <li class=\"nav-item\">\n                    <a class=\"nav-link active\" href=\"javascript:void(0)\" [ngClass]=\"{ active: activeTab === 'image' }\"\n                        (click)=\"search('image')\" data-toggle=\"tab\">Computer Vision API Service (Microsoft)</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"javascript:void(0)\" [ngClass]=\"{ active: activeTab === 'audio' }\"\n                        data-toggle=\"tab\" (click)=\"result('audio')\">Speech Service (Microsoft)</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"javascript:void(0)\" [ngClass]=\"{ active: activeTab === 'file' }\"\n                        data-toggle=\"tab\" (click)=\"result('file')\">Form Recognizer Service (Microsoft)</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"javascript:void(0)\" [ngClass]=\"{ active: activeTab === 'text' }\"\n                        data-toggle=\"tab\" (click)=\"result('text')\">Translator Service (Microsoft)</a>\n                </li>\n            </ul>\n        </div>\n        <div class=\"col-md-8\">\n            <br />\n            <div class=\"tab-content\">\n                <div class=\"tab-pane fade show\" id=\"image-section\" [ngClass]=\"{ active: activeTab === 'image' }\">\n                    <app-imageupload></app-imageupload>\n                </div>\n                <div class=\"tab-pane fade show\" id=\"audio-section\" [ngClass]=\"{ active: activeTab === 'audio' }\">\n                    <app-audio></app-audio>\n                </div>\n                <div class=\"tab-pane fade show\" id=\"file-section\" [ngClass]=\"{ active: activeTab === 'file' }\">\n                    <app-file></app-file>\n                </div>\n                <div class=\"tab-pane fade show\" id=\"text-section\" [ngClass]=\"{ active: activeTab === 'text' }\">\n                    <app-text></app-text>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { TextService } from './text.service';\r\n\r\n@Component({\r\n  selector: 'app-text',\r\n  templateUrl: './text.component.html',\r\n  styleUrls: ['./text.component.css']\r\n})\r\nexport class TextComponent implements OnInit {\r\n\r\n  loading: boolean = false;\r\n  myForm = new FormGroup({\r\n    sourceText: new FormControl(\"\", [Validators.required]),\r\n    targetLanguage: new FormControl(\"\", [Validators.required]),\r\n  });\r\n  selectedLanguage = \"en\";\r\n  showText: string = \"\";\r\n  resultObject = null;\r\n  targetLanguages = [\r\n    {\r\n      value: \"en\",\r\n      text: \"English\"\r\n    },\r\n    {\r\n      value: \"hi\",\r\n      text: \"Hindi\"\r\n    },\r\n    {\r\n      value: \"pa\",\r\n      text: \"Punjabi\"\r\n    }\r\n  ]\r\n\r\n  constructor(private textService: TextService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  submit() {\r\n    this.loading = true;\r\n    var subscription = this.textService.getTranslation(this.myForm.value.sourceText, this.selectedLanguage)\r\n      .subscribe(\r\n        (res: any) => {\r\n          if (res.success) {\r\n            this.resultObject = res.data;\r\n\r\n          } else {\r\n            this.showText = res.userMessage;\r\n          }\r\n          this.loading = false;\r\n          subscription.unsubscribe();\r\n        },\r\n        (err: any) => {\r\n          console.log(err);\r\n          this.loading = false;\r\n          subscription.unsubscribe();\r\n        });\r\n  }\r\n\r\n  reset() {\r\n    this.showText = \"\";\r\n    this.resultObject = null;\r\n  }\r\n\r\n  getLanguageName() {\r\n    return this.targetLanguages.find(x => x.value == this.selectedLanguage).text;\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"loading\" class=\"spinner-border text-info\" role=\"status\">\r\n      <span class=\"sr-only\">Loading...</span>\r\n</div>\r\n\r\n<div class=\"container\">\r\n      <div class=\"row\">\r\n            <form [formGroup]=\"myForm\" style=\"width: 350px;\" (ngSubmit)=\"submit()\">\r\n                  <input class=\"form-control\" type=\"text\" placeholder=\"Enter/ paste keyphrase, word, paragraph...\"\r\n                        formControlName=\"sourceText\" />\r\n                  <br />\r\n                  <label><strong>Select Target Language</strong></label>\r\n                  <select formControlName=\"targetLanguage\" class=\"form-control\" [(ngModel)]=\"selectedLanguage\">\r\n                        <option *ngFor=\"let option of targetLanguages\" [value]=\"option.value\">\r\n                              {{option.text}}\r\n                        </option>\r\n                  </select>\r\n                  <br />\r\n                  <button type=\"button\" style=\"width: 87px;\" class=\"btn btn-primary form-control\" type=\"submit\">\r\n                        Submit\r\n                  </button>\r\n            </form>\r\n      </div>\r\n      <hr>\r\n      <div class=\"row\">\r\n            <label><b>Result: </b></label>\r\n            <br />\r\n            <p class=\"result-text\" *ngIf=\"showText\">{{ showText }}</p>\r\n\r\n            <div class=\"table-responsive table-bordered\" *ngIf=\"resultObject\">\r\n                  <table class=\"table\">\r\n                        <thead>\r\n                              <tr>\r\n                                    <th scope=\"col\">Detected Input Language</th>\r\n                                    <th scope=\"col\">Translation in ({{getLanguageName()}})</th>\r\n                              </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                              <tr>\r\n                                    <td>{{resultObject.detectedLanguage}}</td>\r\n                                    <td>{{resultObject.translatedText}}</td>\r\n                              </tr>\r\n                        </tbody>\r\n                  </table>\r\n            </div>\r\n\r\n            <button style=\"margin-top: 10px; margin-bottom: -10px;\" *ngIf=\"showText || resultObject\"\r\n                  class=\"btn btn-danger\" (click)=\"reset()\">\r\n                  Clear\r\n            </button>\r\n      </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { domain } from \"../../environments/environment\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TextService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getTranslation(data: string, targetLanguage: string) {\r\n    let request = {\r\n      text: data,\r\n      language: targetLanguage\r\n    }\r\n    return this.http.post(`${domain}/api/text/translate`, request)\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n};\r\n\r\nexport const SPEECH_CONFIG = {\r\n  API_KEY: \"7745e44dea9e418688b594f6d425f24e\",\r\n  REGION: \"eastus\",\r\n};\r\n\r\nexport const domain: string = \"http://127.0.0.1:5000\";\r\n//export const domain: string = \"https://cogniapi.azurewebsites.net\";\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"sourceRoot":"webpack:///"}